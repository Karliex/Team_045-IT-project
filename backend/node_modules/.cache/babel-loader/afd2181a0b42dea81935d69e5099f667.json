{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.default = void 0;\n\nfunction _assert() {\n  const data = _interopRequireDefault(require('assert'));\n\n  _assert = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _console() {\n  const data = require('console');\n\n  _console = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _util() {\n  const data = require('util');\n\n  _util = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _chalk() {\n  const data = _interopRequireDefault(require('chalk'));\n\n  _chalk = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _jestUtil() {\n  const data = require('jest-util');\n\n  _jestUtil = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nclass CustomConsole extends _console().Console {\n  constructor(stdout, stderr, formatBuffer = (_type, message) => message) {\n    super(stdout, stderr);\n\n    _defineProperty(this, '_stdout', void 0);\n\n    _defineProperty(this, '_stderr', void 0);\n\n    _defineProperty(this, '_formatBuffer', void 0);\n\n    _defineProperty(this, '_counters', {});\n\n    _defineProperty(this, '_timers', {});\n\n    _defineProperty(this, '_groupDepth', 0);\n\n    _defineProperty(this, 'Console', _console().Console);\n\n    this._stdout = stdout;\n    this._stderr = stderr;\n    this._formatBuffer = formatBuffer;\n  }\n\n  _log(type, message) {\n    (0, _jestUtil().clearLine)(this._stdout);\n    super.log(this._formatBuffer(type, '  '.repeat(this._groupDepth) + message));\n  }\n\n  _logError(type, message) {\n    (0, _jestUtil().clearLine)(this._stderr);\n    super.error(this._formatBuffer(type, '  '.repeat(this._groupDepth) + message));\n  }\n\n  assert(value, message) {\n    try {\n      (0, _assert().default)(value, message);\n    } catch (error) {\n      this._logError('assert', error.toString());\n    }\n  }\n\n  count(label = 'default') {\n    if (!this._counters[label]) {\n      this._counters[label] = 0;\n    }\n\n    this._log('count', (0, _util().format)(`${label}: ${++this._counters[label]}`));\n  }\n\n  countReset(label = 'default') {\n    this._counters[label] = 0;\n  }\n\n  debug(firstArg, ...args) {\n    this._log('debug', (0, _util().format)(firstArg, ...args));\n  }\n\n  dir(firstArg, ...args) {\n    this._log('dir', (0, _util().format)(firstArg, ...args));\n  }\n\n  dirxml(firstArg, ...args) {\n    this._log('dirxml', (0, _util().format)(firstArg, ...args));\n  }\n\n  error(firstArg, ...args) {\n    this._logError('error', (0, _util().format)(firstArg, ...args));\n  }\n\n  group(title, ...args) {\n    this._groupDepth++;\n\n    if (title || args.length > 0) {\n      this._log('group', _chalk().default.bold((0, _util().format)(title, ...args)));\n    }\n  }\n\n  groupCollapsed(title, ...args) {\n    this._groupDepth++;\n\n    if (title || args.length > 0) {\n      this._log('groupCollapsed', _chalk().default.bold((0, _util().format)(title, ...args)));\n    }\n  }\n\n  groupEnd() {\n    if (this._groupDepth > 0) {\n      this._groupDepth--;\n    }\n  }\n\n  info(firstArg, ...args) {\n    this._log('info', (0, _util().format)(firstArg, ...args));\n  }\n\n  log(firstArg, ...args) {\n    this._log('log', (0, _util().format)(firstArg, ...args));\n  }\n\n  time(label = 'default') {\n    if (this._timers[label]) {\n      return;\n    }\n\n    this._timers[label] = new Date();\n  }\n\n  timeEnd(label = 'default') {\n    const startTime = this._timers[label];\n\n    if (startTime) {\n      const endTime = new Date().getTime();\n      const time = endTime - startTime.getTime();\n\n      this._log('time', (0, _util().format)(`${label}: ${(0, _jestUtil().formatTime)(time)}`));\n\n      delete this._timers[label];\n    }\n  }\n\n  timeLog(label = 'default', ...data) {\n    const startTime = this._timers[label];\n\n    if (startTime) {\n      const endTime = new Date();\n      const time = endTime.getTime() - startTime.getTime();\n\n      this._log('time', (0, _util().format)(`${label}: ${(0, _jestUtil().formatTime)(time)}`, ...data));\n    }\n  }\n\n  warn(firstArg, ...args) {\n    this._logError('warn', (0, _util().format)(firstArg, ...args));\n  }\n\n  getBuffer() {\n    return undefined;\n  }\n\n}\n\nexports.default = CustomConsole;","map":{"version":3,"sources":["/Users/david/Desktop/it_ass/Team_045-IT-project/backend/node_modules/@jest/console/build/CustomConsole.js"],"names":["Object","defineProperty","exports","value","default","_assert","data","_interopRequireDefault","require","_console","_util","_chalk","_jestUtil","obj","__esModule","_defineProperty","key","enumerable","configurable","writable","CustomConsole","Console","constructor","stdout","stderr","formatBuffer","_type","message","_stdout","_stderr","_formatBuffer","_log","type","clearLine","log","repeat","_groupDepth","_logError","error","assert","toString","count","label","_counters","format","countReset","debug","firstArg","args","dir","dirxml","group","title","length","bold","groupCollapsed","groupEnd","info","time","_timers","Date","timeEnd","startTime","endTime","getTime","formatTime","timeLog","warn","getBuffer","undefined"],"mappings":"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","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.default = void 0;\n\nfunction _assert() {\n  const data = _interopRequireDefault(require('assert'));\n\n  _assert = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _console() {\n  const data = require('console');\n\n  _console = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _util() {\n  const data = require('util');\n\n  _util = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _chalk() {\n  const data = _interopRequireDefault(require('chalk'));\n\n  _chalk = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _jestUtil() {\n  const data = require('jest-util');\n\n  _jestUtil = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {default: obj};\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\n\nclass CustomConsole extends _console().Console {\n  constructor(stdout, stderr, formatBuffer = (_type, message) => message) {\n    super(stdout, stderr);\n\n    _defineProperty(this, '_stdout', void 0);\n\n    _defineProperty(this, '_stderr', void 0);\n\n    _defineProperty(this, '_formatBuffer', void 0);\n\n    _defineProperty(this, '_counters', {});\n\n    _defineProperty(this, '_timers', {});\n\n    _defineProperty(this, '_groupDepth', 0);\n\n    _defineProperty(this, 'Console', _console().Console);\n\n    this._stdout = stdout;\n    this._stderr = stderr;\n    this._formatBuffer = formatBuffer;\n  }\n\n  _log(type, message) {\n    (0, _jestUtil().clearLine)(this._stdout);\n    super.log(\n      this._formatBuffer(type, '  '.repeat(this._groupDepth) + message)\n    );\n  }\n\n  _logError(type, message) {\n    (0, _jestUtil().clearLine)(this._stderr);\n    super.error(\n      this._formatBuffer(type, '  '.repeat(this._groupDepth) + message)\n    );\n  }\n\n  assert(value, message) {\n    try {\n      (0, _assert().default)(value, message);\n    } catch (error) {\n      this._logError('assert', error.toString());\n    }\n  }\n\n  count(label = 'default') {\n    if (!this._counters[label]) {\n      this._counters[label] = 0;\n    }\n\n    this._log(\n      'count',\n      (0, _util().format)(`${label}: ${++this._counters[label]}`)\n    );\n  }\n\n  countReset(label = 'default') {\n    this._counters[label] = 0;\n  }\n\n  debug(firstArg, ...args) {\n    this._log('debug', (0, _util().format)(firstArg, ...args));\n  }\n\n  dir(firstArg, ...args) {\n    this._log('dir', (0, _util().format)(firstArg, ...args));\n  }\n\n  dirxml(firstArg, ...args) {\n    this._log('dirxml', (0, _util().format)(firstArg, ...args));\n  }\n\n  error(firstArg, ...args) {\n    this._logError('error', (0, _util().format)(firstArg, ...args));\n  }\n\n  group(title, ...args) {\n    this._groupDepth++;\n\n    if (title || args.length > 0) {\n      this._log(\n        'group',\n        _chalk().default.bold((0, _util().format)(title, ...args))\n      );\n    }\n  }\n\n  groupCollapsed(title, ...args) {\n    this._groupDepth++;\n\n    if (title || args.length > 0) {\n      this._log(\n        'groupCollapsed',\n        _chalk().default.bold((0, _util().format)(title, ...args))\n      );\n    }\n  }\n\n  groupEnd() {\n    if (this._groupDepth > 0) {\n      this._groupDepth--;\n    }\n  }\n\n  info(firstArg, ...args) {\n    this._log('info', (0, _util().format)(firstArg, ...args));\n  }\n\n  log(firstArg, ...args) {\n    this._log('log', (0, _util().format)(firstArg, ...args));\n  }\n\n  time(label = 'default') {\n    if (this._timers[label]) {\n      return;\n    }\n\n    this._timers[label] = new Date();\n  }\n\n  timeEnd(label = 'default') {\n    const startTime = this._timers[label];\n\n    if (startTime) {\n      const endTime = new Date().getTime();\n      const time = endTime - startTime.getTime();\n\n      this._log(\n        'time',\n        (0, _util().format)(`${label}: ${(0, _jestUtil().formatTime)(time)}`)\n      );\n\n      delete this._timers[label];\n    }\n  }\n\n  timeLog(label = 'default', ...data) {\n    const startTime = this._timers[label];\n\n    if (startTime) {\n      const endTime = new Date();\n      const time = endTime.getTime() - startTime.getTime();\n\n      this._log(\n        'time',\n        (0, _util().format)(\n          `${label}: ${(0, _jestUtil().formatTime)(time)}`,\n          ...data\n        )\n      );\n    }\n  }\n\n  warn(firstArg, ...args) {\n    this._logError('warn', (0, _util().format)(firstArg, ...args));\n  }\n\n  getBuffer() {\n    return undefined;\n  }\n}\n\nexports.default = CustomConsole;\n"]},"metadata":{},"sourceType":"script"}